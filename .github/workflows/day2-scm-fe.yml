name: day2-scm-fe

on:
  push:
    branches:
      - master
    paths:
      - day2/apps/infrastructure/bicep/scm-fe.bicep
      - day2/apps/frontend/scmfe/**
      - .github/workflows/day2-scm-fe.yml

  pull_request:
    branches:
      - master
    paths:
      - day2/apps/infrastructure/bicep/scm-fe.bicep
      - day2/apps/frontend/scmfe/**
      - .github/workflows/day2-scm-fe.yml

  workflow_dispatch:

env:
  BICEP_FILE_NAME: "scm-fe.bicep"

jobs:
  build-bicep:
    if: github.repository == 'azuredevcollege/trainingdays'
    runs-on: ubuntu-latest
    env:
      BICEP_FILE_PATH: "./day2/apps/infrastructure/bicep/scm-fe.bicep"
      NEED_DEPLOY: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Transpile bicep files
        run: az bicep build -f ${{ env.BICEP_FILE_PATH }}

      - name: Archive ARM Templates artifacts
        uses: actions/upload-artifact@v2
        if: env.NEED_DEPLOY == 'true'
        with:
          name: bicep
          path: ${{ env.BICEP_FILE_PATH }}
          if-no-files-found: error
          retention-days: 30

  build-fe:
    if: github.repository == 'azuredevcollege/trainingdays'
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: "14.x"
      FE_PROJECT_PATH: "./day2/apps/frontend/scmfe"
      FE_DIST_PATH: "./day2/apps/frontend/scmfe/dist/"
      NEED_DEPLOY: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: npm install and build
        working-directory: ${{ env.FE_PROJECT_PATH }}
        run: |
          npm install
          npm run build

      - name: Archive SCM Frontend
        uses: actions/upload-artifact@v2
        if: env.NEED_DEPLOY == 'true'
        with:
          name: scmfe
          path: ${{ env.FE_DIST_PATH }}
          if-no-files-found: error
          retention-days: 30

  deploy-to-dev:
    if: (github.repository == 'azuredevcollege/trainingdays') && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch'))
    runs-on: ubuntu-latest
    environment: day2-scm-dev
    needs: [build-bicep, build-fe]
    env:
      RESOURCE_GROUP_NAME: rg-scm-devday2
      RESOURCE_GROUP_LOCATION: westeurope
      ENV_NAME: devd2

    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Create ResourceGroup name
        id: createResourceGroupName
        run: echo "::set-output name=name::${{ env.RESOURCE_GROUP_NAME }}-${{ env.GITHUB_REPOSITORY_OWNER_PART }}"

      - name: Download bicep artifacts
        uses: actions/download-artifact@v2
        with:
          name: bicep

      - name: Download SCM Frontend artifacts
        uses: actions/download-artifact@v2
        with:
          name: scmfe
          path: ./scmfe

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create ResourceGroup
        run: >
          az group create
          -l ${{ env.RESOURCE_GROUP_LOCATION }}
          -n ${{ steps.createResourceGroupName.outputs.name }}

      - name: Deploy infrastructure to dev environment
        uses: azure/arm-deploy@v1
        id: infrastructure
        with:
          failOnStdErr: false
          resourceGroupName: ${{ steps.createResourceGroupName.outputs.name }}
          template: ./${{ env.BICEP_FILE_NAME }}
          parameters: env=${{ env.ENV_NAME }}

      - name: Enable static website hosting
        run: >
          az storage blob service-properties update 
          --account-name ${{ steps.infrastructure.outputs.storageAccountName }} 
          --static-website  
          --index-document index.html 
          --404-document index.html

      - name: Patch SCM Frontend settings
        run: >
          echo "var uisettings = 
          { 
            \"endpoint\": \"${{ steps.infrastructure.outputs.contactsApiEndpoint }}\", 
            \"resourcesEndpoint\": \"${{ steps.infrastructure.outputs.resourcesApiEndpoint }}\", 
            \"aiKey\": \"${{ steps.infrastructure.outputs.applicationInsightsKey }}\" 
          };" 
          > ./scmfe/settings/settings.js

      - name: Deploy SCM Frontend
        run: >
          az storage blob upload-batch 
          -d '$web' 
          --account-name ${{ steps.infrastructure.outputs.storageAccountName }} 
          -s ./scmfe

  deploy-to-test:
    if: (github.repository == 'azuredevcollege/trainingdays') && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch'))
    runs-on: ubuntu-latest
    environment: day2-scm-test
    needs: deploy-to-dev
    env:
      RESOURCE_GROUP_NAME: rg-scm-testday2
      RESOURCE_GROUP_LOCATION: westeurope
      ENV_NAME: testd2

    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Create ResourceGroup name
        id: createResourceGroupName
        run: echo "::set-output name=name::${{ env.RESOURCE_GROUP_NAME }}-${{ env.GITHUB_REPOSITORY_OWNER_PART }}"

      - name: Download bicep artifacts
        uses: actions/download-artifact@v2
        with:
          name: bicep

      - name: Download SCM Frontend artifacts
        uses: actions/download-artifact@v2
        with:
          name: scmfe
          path: ./scmfe

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create ResourceGroup
        run: >
          az group create
          -l ${{ env.RESOURCE_GROUP_LOCATION }}
          -n ${{ steps.createResourceGroupName.outputs.name }}

      - name: Deploy infrastructure to test environment
        uses: azure/arm-deploy@v1
        id: infrastructure
        with:
          failOnStdErr: false
          resourceGroupName: ${{ steps.createResourceGroupName.outputs.name }}
          template: ./${{ env.BICEP_FILE_NAME }}
          parameters: env=${{ env.ENV_NAME }}

      - name: Enable static website hosting
        run: >
          az storage blob service-properties update 
          --account-name ${{ steps.infrastructure.outputs.storageAccountName }} 
          --static-website  
          --index-document index.html 
          --404-document index.html

      - name: Patch SCM Frontend settings
        run: >
          echo "var uisettings = 
          { 
            \"endpoint\": \"${{ steps.infrastructure.outputs.contactsApiEndpoint }}\", 
            \"resourcesEndpoint\": \"${{ steps.infrastructure.outputs.resourcesApiEndpoint }}\", 
            \"aiKey\": \"${{ steps.infrastructure.outputs.applicationInsightsKey }}\" 
          };" 
          > ./scmfe/settings/settings.js

      - name: Deploy SCM Frontend
        run: >
          az storage blob upload-batch 
          -d '$web' 
          --account-name ${{ steps.infrastructure.outputs.storageAccountName }} 
          -s ./scmfe
